# socioeconomico 2023 ####
rm()
setwd("C:/Users/Administrador/Dropbox/Postdoc/UNIOESTE/Relatórios Itaipu/R rendimento/Trimestral 3 2024")
library(readxl)
library(vegan)
library(tidyr)
library(dplyr)
library(ggplot2)
library(openxlsx)
library(ggrepel)
library(lubridate)
rendimento <- data.frame(read_xlsx("Rendimento - Setembro e Outubro 2024.xlsx", sheet="Banco de dados"))
rendimento$DATA <-as.Date(rendimento$DATA, format = "%d/%m/%Y") # Data em (mmm aaaa)
rendimento$Seq <- seq(nrow(rendimento))

#
nspp<- aggregate(Seq ~ ESPÉCIES+CPUE.Espécie..kg.pescador.dia., data=rendimento, length)

# Remove rows with NA or infinite values
data <- na.omit(nspp[is.finite(nspp$CPUE.Espécie..kg.pescador.dia.), ])

data <- subset(data, !grepl("TOTAL", ESPÉCIES))

data <- data[data$ESPÉCIES != "Outros", ]

# Calculate the mean and standard deviation for each ESPÉCIES category
mean_data <- aggregate(CPUE.Espécie..kg.pescador.dia. ~ ESPÉCIES, data = data, FUN = mean)

# Convert ESPÉCIES to a factor
mean_data$ESPÉCIES <- factor(mean_data$ESPÉCIES, levels = mean_data$ESPÉCIES)

# Order mean_data by CPUE.Espécie..kg.pescador.dia. in descending order
mean_data <- mean_data[order(-mean_data$CPUE.Espécie..kg.pescador.dia.), ]

order_vector <- mean_data$ESPÉCIES

sd_data <- aggregate(CPUE.Espécie..kg.pescador.dia. ~ ESPÉCIES, data = data, FUN = sd)

par(mfrow=c(4,1), mar=c(6,0,1,0), oma=c(3,6,1,0))

# Calculate the upper and lower bounds for error bars (assuming they are available)
upper_bound <- mean_data$CPUE.Espécie..kg.pescador.dia. + sd_data$CPUE.Espécie..kg.pescador.dia.
lower_bound <- mean_data$CPUE.Espécie..kg.pescador.dia. - sd_data$CPUE.Espécie..kg.pescador.dia.

upper_bound <- ifelse(is.na(upper_bound), 0, upper_bound)
lower_bound <- ifelse(is.na(lower_bound), 0, lower_bound)

# Create the bar plot and capture the midpoints
bar_mid <- barplot(height = mean_data$CPUE.Espécie..kg.pescador.dia., 
                   names.arg = mean_data$ESPÉCIES,
                   main = "",
                   xlab = "",
                   ylab = "CPUE (kg/pescador/dia)",
                   col = "black",  # Bar color
                   border = "black",  # Bar border color
                   ylim = c(0, max(upper_bound)),  # Set y-axis limits
                   space = 0.2,  # Adjust space between bars
                   las = 2,
                   width = 0.3,
                   xlim = c(0.5, 20))  # Rotate X-axis labels vertically

# Add text "Geral" to the plot
mtext("Geral", side = 3, line = 0, outer = FALSE, cex = 1.25)

# Add error bars
arrows(x0 = bar_mid, 
       y0 = mean_data$CPUE.Espécie..kg.pescador.dia., 
       x1 = bar_mid, 
       y1 = upper_bound, 
       angle = 90, 
       code = 3, 
       length = 0.05)

#
nspp<- aggregate(Seq ~ ESPÉCIES+CPUE.Espécie..kg.pescador.dia.+ZONA, data=rendimento, length)

fluvial_df <- nspp[nspp$ZONA == "Fluvial", ]
transicao_df <- nspp[nspp$ZONA == "Transição", ]
lacustre_df <- nspp[nspp$ZONA == "Lacustre", ]

#fluvial
# Remove rows with NA or infinite values
data <- na.omit(fluvial_df[is.finite(fluvial_df$CPUE.Espécie..kg.pescador.dia.), ])

data <- subset(data, !grepl("TOTAL", ESPÉCIES))

data <- data[data$ESPÉCIES != "Outros", ]

# Calculate the mean and standard deviation for each ESPÉCIES category
mean_data <- aggregate(CPUE.Espécie..kg.pescador.dia. ~ ESPÉCIES, data = data, FUN = mean)

# Convert ESPÉCIES to a factor
mean_data$ESPÉCIES <- factor(mean_data$ESPÉCIES, levels = mean_data$ESPÉCIES)

# Order mean_data by CPUE.Espécie..kg.pescador.dia. in descending order
mean_data <- mean_data[order(-mean_data$CPUE.Espécie..kg.pescador.dia.), ]

sd_data <- aggregate(CPUE.Espécie..kg.pescador.dia. ~ ESPÉCIES, data = data, FUN = sd)

# Calculate the upper and lower bounds for error bars (assuming they are available)
upper_bound <- mean_data$CPUE.Espécie..kg.pescador.dia. + sd_data$CPUE.Espécie..kg.pescador.dia.
lower_bound <- mean_data$CPUE.Espécie..kg.pescador.dia. - sd_data$CPUE.Espécie..kg.pescador.dia.
upper_bound2<- mean_data$CPUE.Espécie..kg.pescador.dia. + sd_data$CPUE.Espécie..kg.pescador.dia.
upper_bound[is.na(upper_bound)] <- 0

# Create the bar plot and capture the midpoints
bar_mid <- barplot(height = mean_data$CPUE.Espécie..kg.pescador.dia., 
                   names.arg = mean_data$ESPÉCIES,
                   main = "",
                   xlab = "",
                   ylab = "CPUE (kg/pescador/dia)",
                   col = "deepskyblue",  # Bar color
                   border = "black",  # Bar border color
                   ylim = c(0, max(upper_bound)),  # Set y-axis limits
                   space = 0.2,  # Adjust space between bars
                   las = 2,
                   width = 0.3,
                   xlim = c(0.5, 20))  # Rotate X-axis labels vertically

# Add text "Geral" to the plot
mtext("Fluvial", side = 3, line = 0, outer = FALSE, cex = 1.25)

# Add error bars
arrows(x0 = bar_mid, 
       y0 = mean_data$CPUE.Espécie..kg.pescador.dia., 
       x1 = bar_mid, 
       y1 = upper_bound2, 
       angle = 90, 
       code = 3, 
       length = 0.05)

#transição
# Remove rows with NA or infinite values
data <- na.omit(transicao_df[is.finite(transicao_df$CPUE.Espécie..kg.pescador.dia.), ])

data <- subset(data, !grepl("TOTAL", ESPÉCIES))

data <- data[data$ESPÉCIES != "Outros", ]

# Calculate the mean and standard deviation for each ESPÉCIES category
mean_data <- aggregate(CPUE.Espécie..kg.pescador.dia. ~ ESPÉCIES, data = data, FUN = mean)

# Convert ESPÉCIES to a factor
mean_data$ESPÉCIES <- factor(mean_data$ESPÉCIES, levels = mean_data$ESPÉCIES)

# Order mean_data by CPUE.Espécie..kg.pescador.dia. in descending order
mean_data <- mean_data[order(-mean_data$CPUE.Espécie..kg.pescador.dia.), ]

sd_data <- aggregate(CPUE.Espécie..kg.pescador.dia. ~ ESPÉCIES, data = data, FUN = sd)

# Calculate the upper and lower bounds for error bars (assuming they are available)
upper_bound <- mean_data$CPUE.Espécie..kg.pescador.dia. + sd_data$CPUE.Espécie..kg.pescador.dia.
lower_bound <- mean_data$CPUE.Espécie..kg.pescador.dia. - sd_data$CPUE.Espécie..kg.pescador.dia.
upper_bound2<- mean_data$CPUE.Espécie..kg.pescador.dia. + sd_data$CPUE.Espécie..kg.pescador.dia.
upper_bound[is.na(upper_bound)] <- 0

# Create the bar plot and capture the midpoints
bar_mid <- barplot(height = mean_data$CPUE.Espécie..kg.pescador.dia., 
                   names.arg = mean_data$ESPÉCIES,
                   main = "",
                   xlab = "",
                   ylab = "CPUE (kg/pescador/dia)",
                   col = "red",  # Bar color
                   border = "black",  # Bar border color
                   ylim = c(0, max(upper_bound)),  # Set y-axis limits
                   space = 0.2,  # Adjust space between bars
                   las = 2,
                   width = 0.3,
                   xlim = c(0.5, 20))  # Rotate X-axis labels vertically

# Add text "Geral" to the plot
mtext("Transição", side = 3, line = 0, outer = FALSE, cex = 1.25)

# Add error bars
arrows(x0 = bar_mid, 
       y0 = mean_data$CPUE.Espécie..kg.pescador.dia., 
       x1 = bar_mid, 
       y1 = upper_bound2, 
       angle = 90, 
       code = 3, 
       length = 0.05)

#lacustre
# Remove rows with NA or infinite values
data <- na.omit(lacustre_df[is.finite(lacustre_df$CPUE.Espécie..kg.pescador.dia.), ])

data <- subset(data, !grepl("TOTAL", ESPÉCIES))

data <- data[data$ESPÉCIES != "Outros", ]

# Calculate the mean and standard deviation for each ESPÉCIES category
mean_data <- aggregate(CPUE.Espécie..kg.pescador.dia. ~ ESPÉCIES, data = data, FUN = mean)

# Convert ESPÉCIES to a factor
mean_data$ESPÉCIES <- factor(mean_data$ESPÉCIES, levels = mean_data$ESPÉCIES)

# Order mean_data by CPUE.Espécie..kg.pescador.dia. in descending order
mean_data <- mean_data[order(-mean_data$CPUE.Espécie..kg.pescador.dia.), ]

sd_data <- aggregate(CPUE.Espécie..kg.pescador.dia. ~ ESPÉCIES, data = data, FUN = sd)

# Calculate the upper and lower bounds for error bars (assuming they are available)
upper_bound <- mean_data$CPUE.Espécie..kg.pescador.dia. + sd_data$CPUE.Espécie..kg.pescador.dia.
lower_bound <- mean_data$CPUE.Espécie..kg.pescador.dia. - sd_data$CPUE.Espécie..kg.pescador.dia.
upper_bound2<- mean_data$CPUE.Espécie..kg.pescador.dia. + sd_data$CPUE.Espécie..kg.pescador.dia.
upper_bound[is.na(upper_bound)] <- 0

# Create the bar plot and capture the midpoints
bar_mid <- barplot(height = mean_data$CPUE.Espécie..kg.pescador.dia., 
                   names.arg = mean_data$ESPÉCIES,
                   main = "",
                   xlab = "",
                   ylab = "CPUE (kg/pescador/dia)",
                   col = "chartreuse3",  # Bar color
                   border = "black",  # Bar border color
                   ylim = c(0, max(upper_bound)),  # Set y-axis limits
                   space = 0.2,  # Adjust space between bars
                   las = 2,
                   width = 0.3,
                   xlim = c(0.5, 20))  # Rotate X-axis labels vertically

# Add text "Geral" to the plot
mtext("Lacustre", side = 3, line = 0, outer = FALSE, cex = 1.25)

# Add error bars
arrows(x0 = bar_mid, 
       y0 = mean_data$CPUE.Espécie..kg.pescador.dia., 
       x1 = bar_mid, 
       y1 = upper_bound2, 
       angle = 90, 
       code = 3, 
       length = 0.05)

mtext("CPUE: kg/pescador/dia", side=2, line=3, outer=T, cex=1.25)

########### SAVE AS 1000 x 1000
#
#############
########
####

########### SAVE AS 1000 x 1000
#
#############
########
####

nspp<- aggregate(Seq ~ ESPÉCIES+CPUE..kg.m..rede., data=rendimento, length)

# Remove rows with NA or infinite values
data <- na.omit(nspp[is.finite(nspp$CPUE..kg.m..rede.), ])

data <- subset(data, !grepl("TOTAL", ESPÉCIES))

data <- data[data$ESPÉCIES != "Outros", ]

# Calculate the mean and standard deviation for each ESPÉCIES category
mean_data <- aggregate(CPUE..kg.m..rede. ~ ESPÉCIES, data = data, FUN = mean)

# Convert ESPÉCIES to a factor
mean_data$ESPÉCIES <- factor(mean_data$ESPÉCIES, levels = mean_data$ESPÉCIES)

# Order mean_data by CPUE.Espécie..kg.pescador.dia. in descending order
mean_data <- mean_data[order(-mean_data$CPUE..kg.m..rede.), ]

order_vector <- mean_data$ESPÉCIES

sd_data <- aggregate(CPUE..kg.m..rede. ~ ESPÉCIES, data = data, FUN = sd)

par(mfrow=c(4,1), mar=c(6,0,1,0), oma=c(3,6,1,0))

# Calculate the upper and lower bounds for error bars (assuming they are available)
upper_bound <- mean_data$CPUE..kg.m..rede. + sd_data$CPUE..kg.m..rede.
lower_bound <- mean_data$CPUE..kg.m..rede. - sd_data$CPUE..kg.m..rede.

# Create the bar plot and capture the midpoints
bar_mid <- barplot(height = mean_data$CPUE..kg.m..rede., 
                   names.arg = mean_data$ESPÉCIES,
                   main = "",
                   xlab = "",
                   ylab = "CPUE (kg/pescador/dia)",
                   col = "black",  # Bar color
                   border = "black",  # Bar border color
                   ylim = c(0, max(mean_data$CPUE..kg.m..rede.)),  # Set y-axis limits
                   space = 0.2,  # Adjust space between bars
                   las = 2,
                   width = 0.3,
                   xlim = c(0.5, 20))  # Rotate X-axis labels vertically

# Add text "Geral" to the plot
mtext("Geral", side = 3, line = 0, outer = FALSE, cex = 1.25)

# Add error bars
#arrows(x0 = bar_mid, 
#       y0 = mean_data$CPUE..kg.m..rede., 
#       x1 = bar_mid, 
#       y1 = upper_bound, 
#       angle = 90, 
#       code = 3, 
#       length = 0.05)

#
nspp<- aggregate(Seq ~ ESPÉCIES+CPUE..kg.m..rede.+ZONA, data=rendimento, length)

fluvial_df <- nspp[nspp$ZONA == "Fluvial", ]
transicao_df <- nspp[nspp$ZONA == "Transição", ]
lacustre_df <- nspp[nspp$ZONA == "Lacustre", ]

#fluvial
# Remove rows with NA or infinite values
data <- na.omit(fluvial_df[is.finite(fluvial_df$CPUE..kg.m..rede.), ])

data <- subset(data, !grepl("TOTAL", ESPÉCIES))

data <- data[data$ESPÉCIES != "Outros", ]

# Calculate the mean and standard deviation for each ESPÉCIES category
mean_data <- aggregate(CPUE..kg.m..rede. ~ ESPÉCIES, data = data, FUN = mean)

# Convert ESPÉCIES to a factor
mean_data$ESPÉCIES <- factor(mean_data$ESPÉCIES, levels = mean_data$ESPÉCIES)

# Order mean_data by CPUE.Espécie..kg.pescador.dia. in descending order
mean_data <- mean_data[order(-mean_data$CPUE..kg.m..rede.), ]

sd_data <- aggregate(CPUE..kg.m..rede. ~ ESPÉCIES, data = data, FUN = sd)

# Calculate the upper and lower bounds for error bars (assuming they are available)
upper_bound <- mean_data$CPUE..kg.m..rede. + sd_data$CPUE..kg.m..rede.
lower_bound <- mean_data$CPUE..kg.m..rede. - sd_data$CPUE..kg.m..rede.
upper_bound2<- mean_data$CPUE..kg.m..rede. + sd_data$CPUE..kg.m..rede.
upper_bound[is.na(upper_bound)] <- 0

# Create the bar plot and capture the midpoints
bar_mid <- barplot(height = mean_data$CPUE..kg.m..rede., 
                   names.arg = mean_data$ESPÉCIES,
                   main = "",
                   xlab = "",
                   ylab = "CPUE (kg/pescador/dia)",
                   col = "deepskyblue",  # Bar color
                   border = "black",  # Bar border color
                   ylim = c(0, max(mean_data$CPUE..kg.m..rede.)),  # Set y-axis limits
                   space = 0.2,  # Adjust space between bars
                   las = 2,
                   width = 0.3,
                   xlim = c(0.5, 20))  # Rotate X-axis labels vertically

# Add text "Geral" to the plot
mtext("Fluvial", side = 3, line = 0, outer = FALSE, cex = 1.25)

## Add error bars
#arrows(x0 = bar_mid, 
#       y0 = mean_data$CPUE.Espécie..kg.pescador.dia., 
#       x1 = bar_mid, 
#       y1 = upper_bound2, 
#       angle = 90, 
#       code = 3, 
#       length = 0.05)

#transição
# Remove rows with NA or infinite values
data <- na.omit(transicao_df[is.finite(transicao_df$CPUE..kg.m..rede.), ])

data <- subset(data, !grepl("TOTAL", ESPÉCIES))

data <- data[data$ESPÉCIES != "Outros", ]

# Calculate the mean and standard deviation for each ESPÉCIES category
mean_data <- aggregate(CPUE..kg.m..rede. ~ ESPÉCIES, data = data, FUN = mean)

# Convert ESPÉCIES to a factor
mean_data$ESPÉCIES <- factor(mean_data$ESPÉCIES, levels = mean_data$ESPÉCIES)

# Order mean_data by CPUE.Espécie..kg.pescador.dia. in descending order
mean_data <- mean_data[order(-mean_data$CPUE..kg.m..rede.), ]

sd_data <- aggregate(CPUE..kg.m..rede. ~ ESPÉCIES, data = data, FUN = sd)

# Calculate the upper and lower bounds for error bars (assuming they are available)
upper_bound <- mean_data$CPUE..kg.m..rede. + sd_data$CPUE..kg.m..rede.
lower_bound <- mean_data$CPUE..kg.m..rede. - sd_data$CPUE..kg.m..rede.
upper_bound2<- mean_data$CPUE..kg.m..rede. + sd_data$CPUE..kg.m..rede.
upper_bound[is.na(upper_bound)] <- 0

# Create the bar plot and capture the midpoints
bar_mid <- barplot(height = mean_data$CPUE..kg.m..rede., 
                   names.arg = mean_data$ESPÉCIES,
                   main = "",
                   xlab = "",
                   ylab = "CPUE (kg/pescador/dia)",
                   col = "red",  # Bar color
                   border = "black",  # Bar border color
                   ylim = c(0, max(mean_data$CPUE..kg.m..rede.)),  # Set y-axis limits
                   space = 0.2,  # Adjust space between bars
                   las = 2,
                   width = 0.3,
                   xlim = c(0.5, 20))  # Rotate X-axis labels vertically

# Add text "Geral" to the plot
mtext("Transição", side = 3, line = 0, outer = FALSE, cex = 1.25)

# Add error bars
#arrows(x0 = bar_mid, 
#       y0 = mean_data$CPUE.Espécie..kg.pescador.dia., 
#       x1 = bar_mid, 
#       y1 = upper_bound2, 
#       angle = 90, 
#       code = 3, 
#       length = 0.05)

#lacustre
# Remove rows with NA or infinite values
data <- na.omit(lacustre_df[is.finite(lacustre_df$CPUE..kg.m..rede.), ])

data <- subset(data, !grepl("TOTAL", ESPÉCIES))

data <- data[data$ESPÉCIES != "Outros", ]

# Calculate the mean and standard deviation for each ESPÉCIES category
mean_data <- aggregate(CPUE..kg.m..rede. ~ ESPÉCIES, data = data, FUN = mean)

# Convert ESPÉCIES to a factor
mean_data$ESPÉCIES <- factor(mean_data$ESPÉCIES, levels = mean_data$ESPÉCIES)

# Order mean_data by CPUE.Espécie..kg.pescador.dia. in descending order
mean_data <- mean_data[order(-mean_data$CPUE..kg.m..rede.), ]

sd_data <- aggregate(CPUE..kg.m..rede. ~ ESPÉCIES, data = data, FUN = sd)

# Calculate the upper and lower bounds for error bars (assuming they are available)
upper_bound <- mean_data$CPUE..kg.m..rede. + sd_data$CPUE..kg.m..rede.
lower_bound <- mean_data$CPUE..kg.m..rede. - sd_data$CPUE..kg.m..rede.
upper_bound2<- mean_data$CPUE..kg.m..rede. + sd_data$CPUE..kg.m..rede.
upper_bound[is.na(upper_bound)] <- 0

# Create the bar plot and capture the midpoints
bar_mid <- barplot(height = mean_data$CPUE..kg.m..rede., 
                   names.arg = mean_data$ESPÉCIES,
                   main = "",
                   xlab = "",
                   ylab = "CPUE (kg/pescador/dia)",
                   col = "chartreuse3",  # Bar color
                   border = "black",  # Bar border color
                   ylim = c(0, max(mean_data$CPUE..kg.m..rede.)),  # Set y-axis limits
                   space = 0.2,  # Adjust space between bars
                   las = 2,
                   width = 0.3,
                   xlim = c(0.5, 20))  # Rotate X-axis labels vertically

# Add text "Geral" to the plot
mtext("Lacustre", side = 3, line = 0, outer = FALSE, cex = 1.25)

# Add error bars
#arrows(x0 = bar_mid, 
#       y0 = mean_data$CPUE.Espécie..kg.pescador.dia., 
#       x1 = bar_mid, 
#       y1 = upper_bound2, 
#       angle = 90, 
#       code = 3, 
#       length = 0.05)

mtext("CPUE: kg/m² de rede/dia", side=2, line=4, outer=T, cex=1.25)

############
## espécies por região
especies<-cbind(rendimento$ESPÉCIES,rendimento$ZONA)
especies<-as.data.frame(especies)

library(tidyr)
# Pivot the data wider
wide_data <- pivot_wider(data = especies, 
                         names_from = V2, 
                         values_from = V2, 
                         values_fn = length, 
                         values_fill = 0)

# Ensure each species appears only once
wide_data <- unique(wide_data)

wide_data<-as.data.frame(wide_data)

colnames(wide_data)<-c("Espécies","Lacustre","Transição","Fluvial")

# Change column order
wide_data <- wide_data[, c("Espécies", "Fluvial", "Transição", "Lacustre")]

# Remove rows where Espécies are equal to "TOTAL" or "<NA>"
wide_data <- wide_data[!(wide_data$Espécies %in% c("TOTAL", NA)), ]

# Calculate the sum for each column
total_row <- colSums(wide_data[, -1], na.rm = TRUE)

# Convert the total row to a data frame and name the first column
total_row <- data.frame(Espécies = "TOTAL", t(total_row))

# Bind the total row to the existing data frame
wide_data <- rbind(wide_data, total_row)

write.xlsx(wide_data, file = "espécies registradas no rendimento.xlsx")


############
## espécies por região
especies<-cbind(rendimento$ESPÉCIES,rendimento$ZONA,rendimento$SEMANATOT)
especies<-as.data.frame(especies)

library(tidyr)
# Pivot the data wider
wide_data <- pivot_wider(data = especies, 
                         names_from = V2, 
                         values_from = V2, 
                         values_fn = length, 
                         values_fill = 0)

# Ensure each species appears only once
wide_data <- unique(wide_data)

wide_data<-as.data.frame(wide_data)

colnames(wide_data)<-c("Espécies","kg","Lacustre","Transição","Fluvial")

# Change column order
wide_data <- wide_data[, c("Espécies","kg","Lacustre","Transição","Fluvial")]

# Remove rows where Espécies are equal to "TOTAL" or "<NA>"
wide_data <- wide_data[!(wide_data$Espécies %in% c("TOTAL", NA)), ]

wide_data$kg <- as.numeric(as.character(wide_data$kg))
wide_data$Lacustre <- as.numeric(as.character(wide_data$Lacustre))
wide_data$Transição <- as.numeric(as.character(wide_data$Transição))
wide_data$Fluvial <- as.numeric(as.character(wide_data$Fluvial))

wide_data <- mutate(wide_data, Lacustre2 = kg * Lacustre)
wide_data <- mutate(wide_data, Transição2 = kg * Transição)
wide_data <- mutate(wide_data, Fluvial2 = kg * Fluvial)

wide_data<-wide_data[,-3]
wide_data<-wide_data[,-3]
wide_data<-wide_data[,-3]

colnames(wide_data)<-c("Espécies","kg","Lacustre","Transição","Fluvial")

# Change column order
wide_data <- wide_data[, c("Espécies","kg","Lacustre","Transição","Fluvial")]

# Calculate the sum for each column
total_row <- colSums(wide_data[, -1], na.rm = TRUE)

# Convert the total row to a data frame and name the first column
total_row <- data.frame(Espécies = "TOTAL", t(total_row))

# Bind the total row to the existing data frame
wide_data <- rbind(wide_data, total_row)

wide_data <- na.omit(wide_data)

sum_by_species <- wide_data %>%
  group_by(Espécies) %>%
  summarize_at(vars(-group_cols()), sum)

wide_data <- unique(sum_by_species)

wide_data<-as.data.frame(wide_data)

wide_data<-wide_data[,-2]

write.xlsx(wide_data, file = "espécies registradas no rendimento (kg).xlsx")
